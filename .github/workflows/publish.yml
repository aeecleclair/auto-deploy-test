name: Build and Publish Hyperion Docker Images

on:
  workflow_dispatch: {}
  push:
    tags:
      - 'v*.*.*'

jobs:
  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_REGISTRY_IDENTIFER }}/hyperion
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push app
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: "3.11"

      - name: Cache uv folder
        id: cache-uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-uv-${{ hashFiles('requirements-common.txt', 'requirements-dev.txt') }}

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install dependencies
        run: uv pip install --system -r requirements-dev.txt

      - name: Cache .pytest_cache folder
        id: pytest_cache
        uses: actions/cache@v4
        with:
          path: .pytest_cache
          key: pytest_cache-${{ github.head_ref }}

      # Add this debugging step before running tests to identify issues in test collection
      - name: Debug pytest collection
        run: pytest --collect-only -v

      - name: Run migration unit tests with SQLite
        run: python -m pytest tests/test_migrations.py

      - name: Run unit tests with Postgresql
        run: python -m pytest --cov
        env:
          SQLITE_DB: ""

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
